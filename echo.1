'\" t
.\"     Title: echo
.\"    Author: Mo McRoberts
.\" Generator: DocBook XSL Stylesheets v1.77.1 <http://docbook.sf.net/>
.\"      Date: 09/03/2012
.\"    Manual: User Commands
.\"    Source: System Manager's Manual
.\"  Language: English
.\"
.TH "ECHO" "1" "09/03/2012" "System Manager's Manual" "User Commands"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
echo \- write arguments to standard output
.SH "SYNOPSIS"
.HP \w'\fBecho\fR\ 'u
\fBecho\fR [string...]
.SH "DESCRIPTION"
.PP
The
\fBecho\fR
utility writes its arguments to standard output, separated by a <space> and followed by a <newline>\&. If there are no arguments, only the <newline> is written\&.
.SH "OPTIONS"
.PP
The
\fBecho\fR
utility does not perform option processing\&. All arguments are processed as operands\&.
.SH "OPERANDS"
.PP
The following operands are supported:
.PP
\fBstring\fR
.RS 4
A string to be written to standard output\&. The following character sequences are recognised within each string:
.PP
\ea
.RS 4
Write an <alert>\&.
.RE
.PP
\eb
.RS 4
Write a <backspace>\&.
.RE
.PP
\ec
.RS 4
Suppress the <newline> which would normally follow the final argument and immediately end processing\&. All characters following the \*(Aq\ec\*(Aq are ignored\&.
.RE
.PP
\ef
.RS 4
Write a <form\-feed>\&.
.RE
.PP
\en
.RS 4
Write a <newline>\&.
.RE
.PP
\er
.RS 4
Write a <carriage\-return>\&.
.RE
.PP
\et
.RS 4
Write a <tab>\&.
.RE
.PP
\ev
.RS 4
Write a <vertical\-tab>\&.
.RE
.PP
\e\e
.RS 4
Write a backslash character\&.
.RE
.PP
\e0\fBnum\fR
.RS 4
Write an 8\-bit character whose octal value is
\fBnum\fR\&.
.RE
.RE
.SH "DIAGNOSTICS"
.PP
The following error values are returned:
.\" line length increase to cope w/ tbl weirdness
.ll +(\n(LLu * 62u / 100u)
.TS
ll.
\fIError value\fR	\fIDiagnostic\fR
T{
\fB0\fR
T}	T{
Successful completion\&.
T}
T{
\fB>0\fR
T}	T{
An error occurred\&.
T}
.TE
.\" line length decrease back to previous value
.ll -(\n(LLu * 62u / 100u)
.sp
.SH "KNOWN ISSUES"
.PP
Portable applications wishing to make use of escape sequences or newline\-inhibition should avoid the
\fBecho\fR
utility and should instead make use of
\fBprintf\fR(1)\&.
.SH "STANDARDS"
.PP
The
\fBecho\fR
utility conforms to the
Single UNIX Specification, Version 3 (SUSv3)
and the
X/Open System Interfaces Extension\&.
.SH "SEE ALSO"
.PP

\fBprintf\fR(1)\&.
